<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhdb.game.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.lhdb.game.entity.Users" >
    <constructor >
      <idArg column="Id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="UserID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Nullity" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="PreLogintime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="PreLoginIP" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="LastLogintime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="LastLoginIP" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="LoginTimes" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="IsBand" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="BandIP" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="RoleID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Rolename" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="spreader_ids" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Password" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    Id, UserID, Username, Nullity, PreLogintime, PreLoginIP, LastLogintime, LastLoginIP, 
    LoginTimes, IsBand, BandIP, RoleID, Rolename, spreader_ids, Password
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lhdb.game.entity.Users" >
    insert into users (Id, UserID, Username, 
      Nullity, PreLogintime, PreLoginIP, 
      LastLogintime, LastLoginIP, LoginTimes, 
      IsBand, BandIP, RoleID, 
      Rolename, spreader_ids, Password
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{nullity,jdbcType=INTEGER}, #{prelogintime,jdbcType=TIMESTAMP}, #{preloginip,jdbcType=VARCHAR}, 
      #{lastlogintime,jdbcType=TIMESTAMP}, #{lastloginip,jdbcType=VARCHAR}, #{logintimes,jdbcType=INTEGER}, 
      #{isband,jdbcType=INTEGER}, #{bandip,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}, 
      #{rolename,jdbcType=VARCHAR}, #{spreaderIds,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lhdb.game.entity.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
      <if test="username != null" >
        Username,
      </if>
      <if test="nullity != null" >
        Nullity,
      </if>
      <if test="prelogintime != null" >
        PreLogintime,
      </if>
      <if test="preloginip != null" >
        PreLoginIP,
      </if>
      <if test="lastlogintime != null" >
        LastLogintime,
      </if>
      <if test="lastloginip != null" >
        LastLoginIP,
      </if>
      <if test="logintimes != null" >
        LoginTimes,
      </if>
      <if test="isband != null" >
        IsBand,
      </if>
      <if test="bandip != null" >
        BandIP,
      </if>
      <if test="roleid != null" >
        RoleID,
      </if>
      <if test="rolename != null" >
        Rolename,
      </if>
      <if test="spreaderIds != null" >
        spreader_ids,
      </if>
      <if test="password != null" >
        Password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nullity != null" >
        #{nullity,jdbcType=INTEGER},
      </if>
      <if test="prelogintime != null" >
        #{prelogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="preloginip != null" >
        #{preloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginip != null" >
        #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="logintimes != null" >
        #{logintimes,jdbcType=INTEGER},
      </if>
      <if test="isband != null" >
        #{isband,jdbcType=INTEGER},
      </if>
      <if test="bandip != null" >
        #{bandip,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="spreaderIds != null" >
        #{spreaderIds,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhdb.game.entity.Users" >
    update users
    <set >
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        Username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nullity != null" >
        Nullity = #{nullity,jdbcType=INTEGER},
      </if>
      <if test="prelogintime != null" >
        PreLogintime = #{prelogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="preloginip != null" >
        PreLoginIP = #{preloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null" >
        LastLogintime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginip != null" >
        LastLoginIP = #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="logintimes != null" >
        LoginTimes = #{logintimes,jdbcType=INTEGER},
      </if>
      <if test="isband != null" >
        IsBand = #{isband,jdbcType=INTEGER},
      </if>
      <if test="bandip != null" >
        BandIP = #{bandip,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        RoleID = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        Rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="spreaderIds != null" >
        spreader_ids = #{spreaderIds,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhdb.game.entity.Users" >
    update users
    set UserID = #{userid,jdbcType=INTEGER},
      Username = #{username,jdbcType=VARCHAR},
      Nullity = #{nullity,jdbcType=INTEGER},
      PreLogintime = #{prelogintime,jdbcType=TIMESTAMP},
      PreLoginIP = #{preloginip,jdbcType=VARCHAR},
      LastLogintime = #{lastlogintime,jdbcType=TIMESTAMP},
      LastLoginIP = #{lastloginip,jdbcType=VARCHAR},
      LoginTimes = #{logintimes,jdbcType=INTEGER},
      IsBand = #{isband,jdbcType=INTEGER},
      BandIP = #{bandip,jdbcType=VARCHAR},
      RoleID = #{roleid,jdbcType=INTEGER},
      Rolename = #{rolename,jdbcType=VARCHAR},
      spreader_ids = #{spreaderIds,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectWithSpreader" resultMap="BaseResultMap" parameterType="com.lhdb.game.entity.Users">
	  	SELECT *
	  	FROM Users t LEFT JOIN userrole r ON t.userid = r.userid
	  	WHERE t.Username = #{username} AND t.Password = #{password}
  </select>

  <!--  获得用户拥有权限访问功能模块，返回作为菜单显示 -->
  <select id="getUserMenu" parameterType="java.lang.Integer" resultMap="permissionMap">

	select pm.moduleid pid,pm.parentid ppid,pm.title ptitle,pm.link2 plink,pm.ismenu pismenu,pm.icon,
	sm.moduleid,sm.parentid,sm.title,sm.link2 link,sm.ismenu,sm.OperationPermission
	from ( select * from Module where parentid = 0 and nullity = 0) pm
	left join
	(
		select u.username,r.rolename,m.moduleid,m.parentid,m.title,m.link2 ,m.ismenu,m.orderno,rp.OperationPermission
		from users u,UserRole ur,
		Roles r,RolePermission rp ,
		Module m
		where u.userid = ur.userid and r.roleid = ur.roleid
		and r.roleid = rp.roleid  and rp.ModuleID = m.ModuleID
		and u.userid = #{userid} and rp.OperationPermission > 0 and m.nullity = 0
	) sm on pm.moduleid = sm.parentid
	order by pm.orderno,sm.orderno

	</select>


  <resultMap type="com.lhdb.game.entity.Module" id="permissionMap">
    <id column="pid" property="moduleid" />
    <result column="ppid" property="parentid"/>
    <result column="ptitle" property="title"/>
    <result column="plink" property="link"/>
    <result column="pismenu" property="ismenu"/>
    <result column="icon" property="icon"/>
    <!--<collection property="children" ofType="com.lhdb.game.entity.Module" javaType="java.util.ArrayList" column="parentid">
      <id column="moduleid" property="moduleid" />
      <result column="parentid" property="parentid"/>
      <result column="title" property="title"/>
      <result column="link" property="link"/>
      <result column="ismenu" property="ismenu"/>
      <result column="OperationPermission" property="managerpopedom" />
    </collection>-->
  </resultMap>

  <!-- 	获得用户每个模块的权限 -->
  <select id="getUserPermission" parameterType="java.lang.Integer" resultType="com.lhdb.game.entity.ModulePermission">

		select m.moduleid,rp.OperationPermission permissionvalue
		from RolePermission rp,Module m
		where m.Moduleid = rp.ModuleID and roleID = (
			select roleid
			from UserRole
			where userid = #{userid}
		)

	</select>

  <select id="getPermissionValue" parameterType="java.lang.String" resultType="com.lhdb.game.entity.ModulePermission">

		select moduleid,permissionvalue
		from ModulePermission
		where uri = #{uri}

	</select>



  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    select A.* , C.*
    from Users A, UserRole B , Roles C
    where  A.UserID = B.UserID and C.roleID = B.RoleID
  </select>


  <select id="selectByExample2" resultMap="BaseResultMap" parameterType="com.lhdb.game.entity.UsersExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>

  </select>

  <delete id="deleteByExample" parameterType="com.lhdb.game.entity.UsersExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    delete from Users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>




  <insert id="insertUserRole" parameterType="com.lhdb.game.entity.Users">
  insert into UserRole (UserID, RoleID)
	 values (#{userid,jdbcType=INTEGER},#{roleid,jdbcType=INTEGER})
  </insert>

  <select id="countByExample" parameterType="com.lhdb.game.entity.UsersExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    select count(*) from Users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateUserInfo" parameterType="map" >
    update Users
    <set >
      <if test="record.username != null" >
        Username = #{record.username,jdbcType=NVARCHAR},
      </if>
      <if test="record.nullity != null" >
        Nullity = #{record.nullity,jdbcType=TINYINT},
      </if>
      <if test="record.prelogintime != null" >
        PreLogintime = #{record.prelogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.preloginip != null" >
        PreLoginIP = #{record.preloginip,jdbcType=NVARCHAR},
      </if>
      <if test="record.lastlogintime != null" >
        LastLogintime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastloginip != null" >
        LastLoginIP = #{record.lastloginip,jdbcType=NVARCHAR},
      </if>
      <if test="record.logintimes != null" >
        LoginTimes = #{record.logintimes,jdbcType=INTEGER},
      </if>
      <if test="record.isband != null" >
        IsBand = #{record.isband,jdbcType=INTEGER},
      </if>
      <if test="record.bandip != null" >
        BandIP = #{record.bandip,jdbcType=NVARCHAR},
      </if>
    </set>
    where UserID = #{record.userid,jdbcType=NVARCHAR}
  </update>

  <update id="updateUserRole" parameterType="map" >
    update UserRole
    <set>
      <if test="record.roleid != null" >
        RoleID = #{record.roleid,jdbcType=TINYINT},
      </if>
    </set>
    where UserID = #{record.userid,jdbcType=NVARCHAR}
  </update>

  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    update Users
    <set >
      <if test="record.userid != null" >
        UserID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        Username = #{record.username,jdbcType=NVARCHAR},
      </if>
      <if test="record.password != null" >
        Password = #{record.password,jdbcType=NVARCHAR},
      </if>
      <if test="record.nullity != null" >
        Nullity = #{record.nullity,jdbcType=TINYINT},
      </if>
      <if test="record.prelogintime != null" >
        PreLogintime = #{record.prelogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.preloginip != null" >
        PreLoginIP = #{record.preloginip,jdbcType=NVARCHAR},
      </if>
      <if test="record.lastlogintime != null" >
        LastLogintime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastloginip != null" >
        LastLoginIP = #{record.lastloginip,jdbcType=NVARCHAR},
      </if>
      <if test="record.logintimes != null" >
        LoginTimes = #{record.logintimes,jdbcType=INTEGER},
      </if>
      <if test="record.isband != null" >
        IsBand = #{record.isband,jdbcType=INTEGER},
      </if>
      <if test="record.bandip != null" >
        BandIP = #{record.bandip,jdbcType=NVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    update Users
    set UserID = #{record.userid,jdbcType=INTEGER},
    Username = #{record.username,jdbcType=NVARCHAR},
    Password = #{record.password,jdbcType=NVARCHAR},
    Nullity = #{record.nullity,jdbcType=TINYINT},
    PreLogintime = #{record.prelogintime,jdbcType=TIMESTAMP},
    PreLoginIP = #{record.preloginip,jdbcType=NVARCHAR},
    LastLogintime = #{record.lastlogintime,jdbcType=TIMESTAMP},
    LastLoginIP = #{record.lastloginip,jdbcType=NVARCHAR},
    LoginTimes = #{record.logintimes,jdbcType=INTEGER},
    IsBand = #{record.isband,jdbcType=INTEGER},
    BandIP = #{record.bandip,jdbcType=NVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <delete id="deleteByIDList" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    delete from Users
    where UserID in (
    <foreach collection="ids" item="ids" open="" close="" separator=",">
      #{ids,jdbcType=INTEGER}
    </foreach>
    )
  </delete>

  <delete id="deleteUsersInRole" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 29 18:20:08 CST 2014.
    -->
    delete from UserRole
    where UserID in (
    <foreach collection="ids" item="ids" open="" close="" separator=",">
      #{ids,jdbcType=INTEGER}
    </foreach>
    )
  </delete>

  <select id="getOperationModulePermissionNames" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			m.Title moduleName,
			p.PermissionTitle permissionName
		FROM
			Module m
		LEFT JOIN ModulePermission p
		ON m.ModuleID = p.ModuleID
		WHERE
			m.ModuleID = #{moduleId}
		AND p.PermissionValue = #{permissionValue}
	</select>

</mapper>