######################################
#         log4j配置相关说明
######################################

#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%m 输出代码中指定的信息
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)

#log4j提供4种布局:
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息

#log4j中有五级logger 输出级别:
#FATAL 0
#ERROR 3
#WARN 4
#INFO 6
#DEBUG 7

######################################
#          log4j相关配置
######################################

#日志输出级别
log4j.rootLogger=info,stdout,logfile,error,debug

#根记录器 文件输出控制器 DEBUG
log4j.logger.debug=debug
log4j.appender.debug = org.apache.log4j.RollingFileAppender 
log4j.appender.debug.encoding=UTF-8
log4j.appender.debug.File =log/lhdb_debug.log
log4j.appender.debug.Append = true 
log4j.appender.debug.Threshold = DEBUG 
log4j.appender.debug.MaxFileSize=900KB
log4j.appender.debug.MaxBackupIndex=1
log4j.appender.debug.layout = org.apache.log4j.PatternLayout 
log4j.appender.debug.layout.ConversionPattern = %-d{yyyy-MM-dd HH\:mm\:ss} - %C [%t\:%r] - [%p] %m%n

#根记录器 文件输出控制器 INFO
log4j.logger.info=info
log4j.appender.info = org.apache.log4j.RollingFileAppender 
log4j.appender.info.encoding=UTF-8
log4j.appender.info.File = log/lhdb_info.log
log4j.appender.info.Append = true 
log4j.appender.info.Threshold = INFO 
log4j.appender.info.MaxFileSize=900KB
log4j.appender.info.MaxBackupIndex=1
log4j.appender.info.layout = org.apache.log4j.PatternLayout 
log4j.appender.info.layout.ConversionPattern = %-d{yyyy-MM-dd HH\:mm\:ss} - %C [%t\:%r] - [%p] %m%n

log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
log4j.appender.error.File= log/lhdb_error.log
log4j.appender.error.Encoding=utf-8
log4j.appender.error.Append = true
log4j.appender.error.Threshold =ERROR
log4j.appender.error.DatePattern='.'yyyy-MM-dd
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH\:mm\:ss} %C{8}@(%F\:%L)\:%m%n

log4j.logger.logfile=error,logfile
log4j.appender.DEBUG.Encoding=UTF-8

#设置stdout的日志输出控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.err

#设置使用灵活布局
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#灵活定义输出格式
log4j.appender.stdout.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
#log4j.appender.stdout=org.apache.log4j.DailyRollingFileAppender

#设置other的日志输出控制台
log4j.appender.logfile=org.apache.log4j.RollingFileAppender

org.apache.catalina.core.ContainerBase.[Catalina].level=INFO
org.apache.catalina.core.ContainerBase[Catalina].handlers=java.util.logging.ConsoleHandler

log4j.appender.logfile.File= log/lhdb_manager.log
#设置other的日志最大限制
log4j.appender.logfile.MaxFileSize=5000KB
#最多只保存20个备份文件
log4j.appender.logfile.MaxBackupIndex=100
#输出INFO级别以上的日志
log4j.appender.logfile.Threshold=INFO
#设置使用灵活布局
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式
log4j.appender.logfile.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

###\u663E\u793ASQL\u8BED\u53E5\u90E8\u5206

log4j.logger.com.ibatis=debug

log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug

log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug

log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug

log4j.logger.java.sql.Connection=debug

log4j.logger.java.sql.Statement=debug

log4j.logger.java.sql.PreparedStatement=debug


log4j.logger.com.lhdb.game.dao=debug

log4j.logger.org.apache=error
log4j.logger.org.mybatis=error
log4j.logger.org.springframework=error
#这个需要
log4j.logger.log4jdbc.debug=error

log4j.logger.jdbc.audit=error
log4j.logger.jdbc.resultset=error
#这个打印SQL语句非常重要
log4j.logger.jdbc.sqlonly=debug
log4j.logger.jdbc.sqltiming=error
log4j.logger.jdbc.connection=error